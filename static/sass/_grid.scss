/*
Grids based on YUI3 Grids.

Copyright (c) 2010, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 3.3.0
build: 3167
*/
// Basic example (no custom CSS)
// =============================
// <div class="grid-g">
//   <aside class="grid-u-1-5">
//     Column with 1/5 of the width.
//   </aside>
//   <section class="grid-u-3-5">
//     Column with 3/5 of the width.
//   </section>
//   <aside class="grid-u-1-5">
//     Column with 1/5 of the width.
//   </aside>
// </div>
//
// Custom columns example
// ======================
// <div class="layout">
//   <aside class="sidebar-1">
//     Column with 200 pixels.
//   </aside>
//   <section class="main-content">
//     Column with the remaining width of a 100% layout and min-width of 300px.
//   </section>
//   <aside class="sidebar-2">
//     Column with 300 pixels.
//   </aside>
// </div>
//
// Custom columns CSS (unitless values are converted to pixels)
// ------------------------------------------------------------
// .layout {
//   @include grid-g-custom($width: 100%, $left: 200, $right: 300, $include-base: true);
// }
// .main-content {
//   @include grid-u-custom($min-width: 450, $include-base: true);
// }
// .sidebar-1 {
//   @include grid-u-custom($left: 200, $include-base: true);
// }
// .sidebar-2 {
//   @include grid-u-custom($right: 300, $include-base: true);
// }

@mixin grid-g {
  // webkit: collapse white-space between units
  letter-spacing: -0.31em;
  // reset IE < 8
  *letter-spacing: normal;
  // IE < 8 && gecko: collapse white-space between units
  word-spacing: -0.43em;
}
@mixin grid-u {
  display: inline-block;
  // IE < 8: fake inline-block
  zoom: 1; *display: inline;
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
}
@mixin grid-u-1 {
  display: block;
}
@mixin grid-u-1-2 {
  width: 50%;
}
@mixin grid-u-1-3 {
  width: 33.33333%;
}
@mixin grid-u-2-3 {
  width: 66.66666%;
}
@mixin grid-u-1-4 {
  width: 25%;
}
@mixin grid-u-3-4 {
  width: 75%;
}
@mixin grid-u-1-5 {
  width: 20%;
}
@mixin grid-u-2-5 {
  width: 40%;
}
@mixin grid-u-3-5 {
  width: 60%;
}
@mixin grid-u-4-5 {
  width: 80%;
}
@mixin grid-u-1-6 {
  width: 16.656%;
}
@mixin grid-u-5-6 {
  width: 83.33%;
}
@mixin grid-u-1-8 {
  width: 12.5%;
}
@mixin grid-u-3-8 {
  width: 37.5%;
}
@mixin grid-u-5-8 {
  width: 62.5%;
}
@mixin grid-u-7-8 {
  width: 87.5%;
}
@mixin grid-u-1-12 {
  width: 8.3333%;
}
@mixin grid-u-5-12 {
  width: 41.6666%;
}
@mixin grid-u-7-12 {
  width: 58.3333%;
}
@mixin grid-u-11-12 {
  width: 91.6666%;
}
@mixin grid-u-1-24 {
  width: 4.1666%;
}
@mixin grid-u-5-24 {
  width: 20.8333%;
}
@mixin grid-u-7-24 {
  width: 29.1666%;
}
@mixin grid-u-11-24 {
  width: 45.8333%;
}
@mixin grid-u-13-24 {
  width: 54.1666%;
}
@mixin grid-u-17-24 {
  width: 70.8333%;
}
@mixin grid-u-19-24 {
  width: 79.1666%;
}
@mixin grid-u-23-24 {
  width: 95.8333%;
}

// Converts unitless values to pixel-based.
@function grid-unitless-to-pixels($value) {
  @if unitless($value) {
    @return 1px * $value;
  }
  @return $value;
}

// Custom grid.
@mixin grid-g-custom($left: false, $right: false,
                     $width: false, $min-width: false,
                     $include-base: false) {
  @if $include-base {
    @include grid-g;
  }
  @if $left {
    padding-left: grid-unitless-to-pixels($left);
  }
  @if $right {
    padding-right: grid-unitless-to-pixels($right);
  }
  @if $width {
    width: grid-unitless-to-pixels($width);
  }
  @if $min-width {
    min-width: grid-unitless-to-pixels($min-width);
  }
}

// Custom grid unit.
@mixin grid-u-custom($left: false, $right: false,
                     $width: false, $min-width: false,
                     $include-base: false) {
  @if $include-base {
    @include grid-u;
  }
  @if ($left and $right) or ($left and $width) or ($right and $width) {
    @warn "Grid units can't define left, right or width at the same time."
  }
  @else if $left {
    width: grid-unitless-to-pixels($left);
    margin-left: grid-unitless-to-pixels(-$left);
  }
  @else if $right {
    width: grid-unitless-to-pixels($right);
    margin-right: grid-unitless-to-pixels(-$right);
  }
  @else if $width {
    width: grid-unitless-to-pixels($width);
  }
  @else {
    width: 100%;
  }
  @if $min-width {
    min-width: grid-unitless-to-pixels($min-width);
  }
}
